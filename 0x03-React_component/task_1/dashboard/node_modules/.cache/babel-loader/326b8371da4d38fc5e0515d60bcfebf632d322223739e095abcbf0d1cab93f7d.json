{"ast":null,"code":"var _jsxFileName = \"/home/khairat/alx/alx-react/0x03-React_component/task_1/dashboard/src/Notifications/Notifications.js\";\nimport React from 'react';\nimport './Notifications.css';\nimport closeIcon from '../assests/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  displayDrawer = true,\n  listNotifications = []\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItem\",\n      children: \"Your notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: 15,\n          right: 20\n        },\n        \"aria-label\": \"Close\",\n        onClick: () => {\n          console.log('Close button has been clicked');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close Icon\",\n          width: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here is the list of notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listNotifications.length === 0 ? /*#__PURE__*/_jsxDEV(NotificationItem, {\n          type: \"default\",\n          value: \"No new notification for now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this) : listNotifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n          type: notification.type,\n          value: notification.value,\n          html: notification.html\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n}\n_c = Notifications;\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool.isRequired,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape).isRequired\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","closeIcon","NotificationItem","PropTypes","NotificationItemShape","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","displayDrawer","listNotifications","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","onClick","console","log","src","alt","width","length","type","value","map","notification","html","id","_c","propTypes","bool","isRequired","arrayOf","$RefreshReg$"],"sources":["/home/khairat/alx/alx-react/0x03-React_component/task_1/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react'\nimport './Notifications.css'\nimport closeIcon from '../assests/close-icon.png'\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\n\nfunction Notifications({ displayDrawer = true, listNotifications = [] }) {\n    return (\n        <>\n            <div className='menuItem'>\n                Your notifications\n            </div>\n            {displayDrawer && <div className='Notifications'>\n                <button\n                    style={{ position: 'absolute', top: 15, right: 20 }}\n                    aria-label='Close'\n                    onClick={() => { console.log('Close button has been clicked'); }}\n                >\n                    <img src={closeIcon} alt='Close Icon' width={20} />\n                </button>\n                <p>\n                    Here is the list of notifications\n                </p>\n                <ul>\n                    {listNotifications.length === 0 ? (\n                        <NotificationItem\n                            type='default'\n                            value='No new notification for now'\n                        />\n                    ) : (\n                        listNotifications.map((notification) => (\n                            <NotificationItem\n                                key={notification.id}\n                                type={notification.type}\n                                value={notification.value}\n                                html={notification.html}\n                            />\n                        ))\n                    )}\n                </ul>\n            </div>}\n        </>\n    )\n}\n\nNotifications.propTypes = {\n    displayDrawer: PropTypes.bool.isRequired,\n    listNotifications: PropTypes.arrayOf(NotificationItemShape).isRequired,\n};\n\n\nexport default Notifications"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,SAASC,aAAaA,CAAC;EAAEC,aAAa,GAAG,IAAI;EAAEC,iBAAiB,GAAG;AAAG,CAAC,EAAE;EACrE,oBACIL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAKO,SAAS,EAAC,UAAU;MAAAD,QAAA,EAAC;IAE1B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLP,aAAa,iBAAIJ,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5CN,OAAA;QACIY,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAE;QACpD,cAAW,OAAO;QAClBC,OAAO,EAAEA,CAAA,KAAM;UAAEC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAAE,CAAE;QAAAZ,QAAA,eAEjEN,OAAA;UAAKmB,GAAG,EAAExB,SAAU;UAACyB,GAAG,EAAC,YAAY;UAACC,KAAK,EAAE;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACTX,OAAA;QAAAM,QAAA,EAAG;MAEH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJX,OAAA;QAAAM,QAAA,EACKD,iBAAiB,CAACiB,MAAM,KAAK,CAAC,gBAC3BtB,OAAA,CAACJ,gBAAgB;UACb2B,IAAI,EAAC,SAAS;UACdC,KAAK,EAAC;QAA6B;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,GAEFN,iBAAiB,CAACoB,GAAG,CAAEC,YAAY,iBAC/B1B,OAAA,CAACJ,gBAAgB;UAEb2B,IAAI,EAAEG,YAAY,CAACH,IAAK;UACxBC,KAAK,EAAEE,YAAY,CAACF,KAAM;UAC1BG,IAAI,EAAED,YAAY,CAACC;QAAK,GAHnBD,YAAY,CAACE,EAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIvB,CACJ;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACR,CAAC;AAEX;AAACkB,EAAA,GArCQ1B,aAAa;AAuCtBA,aAAa,CAAC2B,SAAS,GAAG;EACtB1B,aAAa,EAAEP,SAAS,CAACkC,IAAI,CAACC,UAAU;EACxC3B,iBAAiB,EAAER,SAAS,CAACoC,OAAO,CAACnC,qBAAqB,CAAC,CAACkC;AAChE,CAAC;AAGD,eAAe7B,aAAa;AAAA,IAAA0B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
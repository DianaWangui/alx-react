{"ast":null,"code":"var _jsxFileName = \"/home/khairat/alx/alx-react/0x03-React_component/task_2/dashboard/src/Notifications/Notifications.js\";\nimport React, { Component } from 'react';\nimport './Notifications.css';\nimport closeIcon from '../assests/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Notifications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayDrawer: true,\n      listNotifications: [{\n        id: 1,\n        type: 'default',\n        value: 'testing'\n      }]\n    };\n  }\n  markAsRead(id) {\n    console.log(`Notification ${id} has been marked as read`);\n  }\n  render() {\n    const {\n      displayDrawer,\n      listNotifications\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuItem\",\n        children: \"Your notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Notifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: 'absolute',\n            top: 15,\n            right: 20\n          },\n          \"aria-label\": \"Close\",\n          onClick: () => {\n            console.log('Close button has been clicked');\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: closeIcon,\n            alt: \"Close Icon\",\n            width: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here is the list of notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: listNotifications.length === 0 ? /*#__PURE__*/_jsxDEV(NotificationItem, {\n            type: \"default\",\n            value: \"No new notification for now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this) : listNotifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            type: notification.type,\n            value: notification.value,\n            html: notification.html\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true);\n  }\n}\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool.isRequired,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape).isRequired\n};\nexport default Notifications;","map":{"version":3,"names":["React","Component","closeIcon","NotificationItem","PropTypes","NotificationItemShape","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","constructor","props","state","displayDrawer","listNotifications","id","type","value","markAsRead","console","log","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","onClick","src","alt","width","length","map","notification","html","propTypes","bool","isRequired","arrayOf"],"sources":["/home/khairat/alx/alx-react/0x03-React_component/task_2/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './Notifications.css'\nimport closeIcon from '../assests/close-icon.png'\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\n\nclass Notifications extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayDrawer: true,\n            listNotifications: [\n                { id: 1, type: 'default', value: 'testing' }\n            ],\n        };\n    }\n\n    markAsRead(id) {\n        console.log(`Notification ${id} has been marked as read`);\n    }\n    render() {\n        const { displayDrawer, listNotifications } = this.props;\n        return (\n            <>\n                <div className='menuItem'>\n                    Your notifications\n                </div>\n                {displayDrawer && <div className='Notifications'>\n                    <button\n                        style={{ position: 'absolute', top: 15, right: 20 }}\n                        aria-label='Close'\n                        onClick={() => { console.log('Close button has been clicked'); }}\n                    >\n                        <img src={closeIcon} alt='Close Icon' width={20} />\n                    </button>\n                    <p>\n                        Here is the list of notifications\n                    </p>\n                    <ul>\n                        {listNotifications.length === 0 ? (\n                            <NotificationItem\n                                type='default'\n                                value='No new notification for now'\n                            />\n                        ) : (\n                            listNotifications.map((notification) => (\n                                <NotificationItem\n                                    key={notification.id}\n                                    type={notification.type}\n                                    value={notification.value}\n                                    html={notification.html}\n                                />\n                            ))\n                        )}\n                    </ul>\n                </div>}\n            </>\n        )\n    }\n}\n\nNotifications.propTypes = {\n    displayDrawer: PropTypes.bool.isRequired,\n    listNotifications: PropTypes.arrayOf(NotificationItemShape).isRequired,\n};\n\n\nexport default Notifications"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}